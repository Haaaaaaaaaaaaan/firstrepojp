import streamlit as st
import folium
from streamlit_folium import st_folium

# 도시 중심 좌표
city_coordinates = {
    '도쿄': (35.682839, 139.759455),
    '오사카': (34.686315, 135.519585),
    '교토': (35.011636, 135.768029),
    '히로시마': (34.385202, 132.455292),
    '삿포로': (43.061368, 141.354376),
    '후쿠오카': (33.590355, 130.401716),
    '나고야': (35.181446, 136.906398),
    '하코다테': (41.768896, 140.735012),
    '카나자와': (36.561643, 136.64863),
    '오카야마': (34.661471, 133.935),
    '센다이': (38.268839, 140.869356),
    '도쿠시마': (34.065976, 134.559843),
    '고베': (34.690083, 135.195511),
    '미야자키': (31.907107, 131.420113),
    '나가사키': (32.794044, 129.873706),
    '시오노미사키': (35.279489, 135.524419),
    '니가타': (37.910648, 139.036203),
    '구마모토': (32.798446, 130.701167),
    '이바라키': (36.341818, 140.446078),
    '오키나와': (26.512890, 127.999773),
}

# 관광 팁
city_attractions = {
    '도쿄': "🎁 기념품 핫플! 나카미세 거리에서 쇼핑 꼭 해보세요!",
    '오사카': "🍢 도톤보리에서 타코야키 먹방 투어 필수!",
    '교토': "⛩️ 기온 거리 산책하며 전통의 멋을 느껴보세요~",
    '히로시마': "🕊️ 평화공원에서 역사적 감동을 느껴보세요.",
    '삿포로': "❄️ 눈 축제와 맥주 박물관! 겨울 감성 최고예요~",
    '후쿠오카': "🍜 하카타 라멘! 후쿠오카는 진짜 라멘 천국이에요!",
    '나고야': "🏯 성덕이라면 나고야성은 필수 방문지예요!",
    '하코다테': "🌅 야경 맛집! 하코다테산 전망은 꼭 봐야 해요!",
    '카나자와': "🎨 예술과 전통이 살아있는 도시! 21세기 미술관 추천!",
    '오카야마': "🌸 정원 덕후라면 여긴 천국! 코라쿠엔 정원 강추!",
    '센다이': "🌲 초록초록한 자연 가득! 가족 나들이에 최고예요~",
    '도쿠시마': "🌊 자연 경관이 예쁜 힐링 도시! 조용히 쉬고 싶을 땐 여기!",
    '고베': "🥩 고베비프 안 먹으면 서운해요~ 항구 산책도 추천!",
    '미야자키': "🌴 열대기후와 해변🌞 여름휴가엔 미야자키~",
    '나가사키': "🎆 낭만항구! 히스토리와 야경 모두 잡자!",
    '시오노미사키': "🌅 일본 최남단의 일출 맛집! 등대 뷰는 환상적이에요!",
    '니가타': "🍚 일본 최고 쌀의 고장! 니가타 사케도 놓치지 마세요!",
    '구마모토': "🏯 구마모토성에서 시간여행을 떠나보세요!",
    '이바라키': "🧪 이바라키 수족관은 아이들과 함께하기 좋은 명소예요!",
    '오키나와': "🏖️ 바다, 산호, 슈리성! 남국의 낭만을 즐기세요~",
}

# 각 도시별 핫플레이스 (장소명, 위도, 경도, 설명)
hotspots = {
    '도쿄': [
        ("시부야 스크램블", 35.6595, 139.7005, "📸 세계에서 가장 번잡한 교차로! 인증샷 필수!"),
        ("하라주쿠 타케시타 거리", 35.6702, 139.7020, "🛍️ 유니크한 패션과 디저트의 천국!"),
        ("도쿄타워", 35.6586, 139.7454, "🌃 도쿄의 상징! 야경 맛집이에요~"),
        ("아사쿠사 센소지", 35.7148, 139.7967, "⛩️ 전통 사찰 + 기념품 거리"),
        ("우에노 공원", 35.7167, 139.7712, "🌸 벚꽃놀이 명소이자 동물원도 있어요!"),
    ],
    '오사카': [
        ("도톤보리", 34.6687, 135.5019, "🍜 오코노미야끼, 타코야키! 맛집 퍼레이드!"),
        ("오사카 성", 34.6873, 135.5259, "🏯 벚꽃과 역사 탐방의 중심지!"),
        ("신세카이", 34.6525, 135.5061, "🍢 쿠시카츠 맛집과 복고 분위기~"),
        ("유니버설 스튜디오", 34.6654, 135.4323, "🎢 해리포터와 스파이더맨을 만나요!"),
        ("우메다 스카이 빌딩", 34.7055, 135.4899, "🌇 도심 전망 최고! 커플 인기 장소💑"),
    ],
    '교토': [
        ("후시미 이나리 신사", 34.9671, 135.7727, "⛩️ 수천 개의 도리이와 신비한 분위기!"),
        ("아라시야마 대나무숲", 35.0094, 135.6668, "🎋 대나무 숲에서 산책과 인생샷!"),
        ("킨카쿠지", 35.0394, 135.7292, "✨ 금으로 빛나는 아름다운 사원"),
        ("기온 거리", 35.0037, 135.7788, "👘 전통 가옥과 게이샤 문화 체험"),
        ("니조 성", 35.0142, 135.7481, "🏯 세계문화유산, 교토의 자랑!"),
    ],
    '히로시마': [
        ("히로시마 평화공원", 34.3955, 132.4536, "🕊️ 세계 평화의 상징, 역사 탐방 필수!"),
        ("원폭 돔", 34.3954, 132.4536, "🏛️ 전쟁의 흔적과 평화의 메시지"),
        ("미야지마 이츠쿠시마 신사", 34.2951, 132.3197, "⛩️ 바다 위 도리이, 일본 3대 절경"),
        ("히로시마 성", 34.4013, 132.4591, "🏯 사무라이 시대를 느낄 수 있는 유적지"),
        ("오코노미야키 마을", 34.3929, 132.4585, "🥘 히로시마식 오코노미야키 천국"),
    ],
    '삿포로': [
        ("오도리 공원", 43.0606, 141.3542, "❄️ 눈 축제와 꽃박람회 열리는 중심 공원"),
        ("삿포로 맥주 박물관", 43.0722, 141.3679, "🍺 일본 맥주의 역사와 시음 체험"),
        ("모에레누마 공원", 43.1168, 141.4234, "🎨 예술과 자연이 어우러진 도시형 공원"),
        ("홋카이도 신궁", 43.0620, 141.3064, "⛩️ 홋카이도의 수호신을 모신 사원"),
        ("JR 타워 전망대", 43.0687, 141.3508, "🌆 삿포로 시내가 한눈에 보이는 야경 명소"),
    ],
    # 추가 도시들 생략 없이 계속 정의 가능
}

def main():
    st.title("🗾 일본 도시별 여행지도 🧳")

    city = st.selectbox("🎌 방문할 도시를 골라보세요!", list(city_coordinates.keys()))
    st.markdown(f"## ✨ {city} 여행 정보")
    st.info(city_attractions.get(city, "🎒 즐거운 여행 되세요!"))

    lat, lon = city_coordinates[city]
    m = folium.Map(location=(lat, lon), zoom_start=12)

    # 중심 마커
    folium.Marker(
        location=(lat, lon),
        tooltip="📍 도심 중심",
        popup=f"<b>{city}</b><br>{city_attractions.get(city)}",
        icon=folium.Icon(color='red', icon='info-sign')
    ).add_to(m)

    # 핫플레이스 마커
    for name, h_lat, h_lon, tip in hotspots.get(city, []):
        folium.Marker(
            location=(h_lat, h_lon),
            tooltip=f"🌟 {name}",
            popup=f"<b>{name}</b><br>{tip}",
            icon=folium.Icon(color='green', icon='star')
        ).add_to(m)

    st_folium(m, width=700, height=500)

if __name__ == "__main__":
    main()
